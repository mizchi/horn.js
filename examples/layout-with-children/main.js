// Generated by CoffeeScript 1.6.3
(function() {
  var Layout, Status, StatusList, _ref, _ref1, _ref2,
    __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  Horn.addDirective("data-click-with-trigger", function(view) {
    var $el,
      _this = this;
    $el = view.$("[data-click-with-trigger]");
    return $el.on('click', function(e) {
      var eventName;
      eventName = $(e.target).data('click-with-trigger');
      return view.trigger(eventName);
    });
  });

  Horn.registerTemplate("<div\n  data-template-name=\"layout\"\n  data-views=\"status, statusList\"\n  data-attrs=\"\">\n  <h1>layout</h1>\n  <div data-view='status:status'/>\n  <div data-list-view='status:statusList'/>\n</div>");

  Horn.registerTemplate("<div\n  data-template-name=\"status\"\n  data-attrs=\"name, money, showAddMoney\">\n\n  <span data-text=\"name\">NO NAME</span>\n  <span data-text=\"money\">0</span>\n  <button data-click-with-trigger=\"update\">update</button>\n  <button data-click=\"dispose\">dispose</button>\n  <button data-click=\"toggleShowAddMoney\">toggle show add money</button>\n  <button data-visible=\"showAddMoney\" data-click=\"addMoney\">addMoney</button>\n</div>");

  Layout = (function(_super) {
    __extends(Layout, _super);

    function Layout() {
      _ref = Layout.__super__.constructor.apply(this, arguments);
      return _ref;
    }

    Layout.prototype.templateName = 'layout';

    Layout.prototype.viewClassMapping = {
      status: function() {
        return Status;
      }
    };

    return Layout;

  })(Horn.View);

  Status = (function(_super) {
    __extends(Status, _super);

    function Status() {
      _ref1 = Status.__super__.constructor.apply(this, arguments);
      return _ref1;
    }

    Status.prototype.templateName = 'status';

    Status.prototype.addMoney = function() {
      return this.money += 10;
    };

    Status.prototype.toggleShowAddMoney = function() {
      return this.showAddMoney = !this.showAddMoney;
    };

    return Status;

  })(Horn.View);

  StatusList = (function(_super) {
    __extends(StatusList, _super);

    function StatusList() {
      _ref2 = StatusList.__super__.constructor.apply(this, arguments);
      return _ref2;
    }

    StatusList.prototype.itemView = Status;

    return StatusList;

  })(Horn.ListView);

  $(function() {
    var layout;
    layout = new Layout;
    layout.attach('body');
    layout.status.name = 'foo';
    layout.status.money = 0;
    return layout.statusList.update([{}, {}, {}]);
  });

}).call(this);
